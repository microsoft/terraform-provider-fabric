# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
---
# Terraform Provider testing workflow.
name: 🧪 Test

# This GitHub action runs your tests for each pull request.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:
  merge_group:

concurrency:
  group: ${{ format('{0}-{1}-{2}-{3}-{4}', github.workflow, github.event_name, github.ref, github.base_ref || null, github.head_ref || null) }}
  cancel-in-progress: true

env:
  FABRIC_TESTACC_SKIP_NO_SPN: true
  FABRIC_TESTACC_WELLKNOWN: ${{ vars.FABRIC_TESTACC_WELLKNOWN }}
  FABRIC_TIMEOUT: 40m

permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:
  changes:
    name: 🔂 Check Changes
    runs-on: ubuntu-24.04
    outputs:
      src: ${{ steps.filter.outputs.src }}
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: 🔂 Check for changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          filters: |
            src:
              - '**.go'
              - 'go.mod'
              - 'go.sum'
              - '.github/workflows/test.yml'

  test-auth-spn:
    name: 🔐 Test Auth (SPN ${{ matrix.method }})
    needs: changes
    if: needs.changes.outputs.src == 'true'
    environment:
      name: development
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        method: [oidc, certificate, secret]
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: 🚧 Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: ⚙️ Configure TF dev overrides
        run: .devcontainer/features/tfprovider-local-dev/install.sh
        env:
          PROVIDERNAME: microsoft/fabric

      - name: 🚧 Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false

      - name: 🔨 Setup Test tools
        run: task test:tools

      - name: 🧪 Run acceptance tests (OIDC)
        if: matrix.method == 'oidc'
        run: task testacc -- WorkspaceResource_CRUD ./internal/services/workspace
        env:
          FABRIC_USE_OIDC: true
          FABRIC_TENANT_ID: ${{ secrets.TESTACC_TENANT_ID }}
          FABRIC_CLIENT_ID: ${{ secrets.TESTACC_SPN_OIDC_CLIENT_ID }}

      - name: 🧪 Run acceptance tests (Certificate)
        if: matrix.method == 'certificate'
        run: task testacc -- WorkspaceResource_CRUD ./internal/services/workspace
        env:
          FABRIC_TENANT_ID: ${{ secrets.TESTACC_TENANT_ID }}
          FABRIC_CLIENT_ID: ${{ secrets.TESTACC_SPN_CERT_CLIENT_ID }}
          FABRIC_CLIENT_CERTIFICATE: ${{ secrets.TESTACC_SPN_CERT_CLIENT_CERTIFICATE }}
          FABRIC_CLIENT_CERTIFICATE_PASSWORD: ${{ secrets.TESTACC_SPN_CERT_CLIENT_CERTIFICATE_PASSWORD }}

      - name: 🧪 Run acceptance tests (Secret)
        if: matrix.method == 'secret'
        run: task testacc -- WorkspaceResource_CRUD ./internal/services/workspace
        env:
          FABRIC_TENANT_ID: ${{ secrets.TESTACC_TENANT_ID }}
          FABRIC_CLIENT_ID: ${{ secrets.TESTACC_SPN_SECRET_CLIENT_ID }}
          FABRIC_CLIENT_SECRET: ${{ secrets.TESTACC_SPN_SECRET_CLIENT_SECRET }}

  # test-auth-msi:
  #   name: 🔐 Test Auth (MSI ${{ matrix.method }})
  #   needs: changes
  #   if: needs.changes.outputs.src == 'true'
  #   environment:
  #     name: development
  #   runs-on: [self-hosted, containerjob]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       method: [system, user]
  #   steps:
  #     - name: ⤵️ Checkout
  #       uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

  #     - name: ✔️ Check for changes
  #       uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
  #       id: changes_check
  #       with:
  #         filters: |
  #           src:
  #             - '**.go'
  #             - 'go.mod'
  #             - 'go.sum'

  #     - name: 🚧 Setup Go
  #       uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
  #       with:
  #         go-version-file: go.mod
  #         cache: true

  #     - name: 🚧 Setup Task
  #       uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
  #       with:
  #         repo-token: ${{ github.token }}

  #     - name: ⚙️ Configure TF dev overrides
  #       run: .devcontainer/features/tfprovider-local-dev/install.sh
  #       env:
  #         PROVIDERNAME: microsoft/fabric

  #     - name: 🚧 Setup Terraform
  #       uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
  #       with:
  #         terraform_wrapper: false

  #     - name: 🔨 Setup Test tools
  #       run: task test:tools

  #     - name: 🧪 Run acceptance tests (User Assigned)
  #       if: matrix.method == 'user'
  #       run: task testacc -- WorkspaceResource_CRUD
  #       env:
  #         FABRIC_USE_MSI: true
  #         FABRIC_TENANT_ID: ${{ secrets.TESTACC_TENANT_ID }}
  #         FABRIC_CLIENT_ID: ${{ secrets.TESTACC_MSI_CLIENT_ID }}

  #     - name: 🧪 Run acceptance tests (System Assigned)
  #       if: matrix.method == 'system'
  #       run: task testacc -- WorkspaceResource_CRUD
  #       env:
  #         FABRIC_USE_MSI: true
  #         FABRIC_TENANT_ID: ${{ secrets.TESTACC_TENANT_ID }}

  checkbuild:
    name: 🏗️ Check Build
    needs: changes
    if: needs.changes.outputs.src == 'true'
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: 🚧 Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔀 Get dependencies
        run: task deps

      - name: 🔀 Check for differences
        run: |
          git diff --exit-code -- go.mod go.sum || \
            (echo; echo "Unexpected difference in go.mod/go.sum files. Run 'task deps' command or revert any go.mod/go.sum changes and commit."; git diff --exit-code)

      - name: ✔️ Run GoVulnCheck
        run: |
          task install:govulncheck
          task govulncheck || (echo "::warning::govulncheck found issues" && exit 0)

      - name: ✔️ Run Go linters
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest
          only-new-issues: true
          skip-cache: true
          skip-save-cache: true
          problem-matchers: true

      - name: 🚧 Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false

      # temporarily disabled due to incompatibliity with Go 1.24
      # - name: ✔️ Run tfproviderlintx
      #   run: |
      #     task install:tfproviderlintx
      #     task tfproviderlintx

      - name: ✔️ Run Terraform linters
        run: |
          task lint:tf-tools
          task lint:tf

      - name: 🔀 Check for differences
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in code. Run 'task lint' command and commit."; git diff --exit-code)

      - name: ✔️ Validate GoReleaser config
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: "~> v2"
          args: check --verbose

      - name: 🏗️ Build snapshot binaries
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: "~> v2"
          args: build --snapshot --clean --verbose

  checkdocs:
    name: 📃 Check Docs
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: 🚧 Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔨 Setup tools
        run: |
          task install:tfplugindocs
          task install:markdownlint
          task install:copywrite

      - name: ✔️ Run Files linters
        run: task lint:files

      - name: 🔀 Check for differences
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference. Run 'task lint:files' command and commit."; git diff --exit-code)

      - name: 📃 Generate docs
        run: task docs

      - name: 🔀 Check for differences
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'task docs' command and commit."; git diff --exit-code)

  # Run tests in a matrix with Terraform CLI versions
  test:
    name: 🧪 Run Tests (${{ matrix.cli }} ${{ matrix.version }})
    needs: changes
    if: needs.changes.outputs.src == 'true'
    environment:
      name: development
    runs-on: ubuntu-24.04
    timeout-minutes: 45
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # Terraform - 2 specific versions
          - cli: terraform
            version: "1.8"
          - cli: terraform
            version: "1.13"

          # OpenTofu - 2 specific versions
          - cli: tofu
            version: "1.7"
          - cli: tofu
            version: "1.10"
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: 🚧 Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Terraform
        if: matrix.cli == 'terraform'
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.version }}
          terraform_wrapper: false

      - name: ⚙️ Configure Terraform
        if: matrix.cli == 'terraform'
        run: |
          terraform -version

      - name: 🚧 Setup OpenTofu
        uses: opentofu/setup-opentofu@000eeb8522f0572907c393e8151076c205fdba1b # v1.0.6
        if: matrix.cli == 'tofu'
        with:
          tofu_version: ${{ matrix.version }}
          tofu_wrapper: false

      - name: ⚙️ Configure OpenTofu
        if: matrix.cli == 'tofu'
        run: |
          echo "TERRAFORM_CLI=$(which tofu)" >> $GITHUB_ENV
          echo "REGISTRY_HOST=registry.opentofu.org" >> $GITHUB_ENV
          echo "TF_ACC_TERRAFORM_PATH=$(which tofu)" >> $GITHUB_ENV
          echo "TF_ACC_PROVIDER_HOST=registry.opentofu.org" >> $GITHUB_ENV

          tofu -version

      - name: ⚙️ Set CLI version
        run: |
          version=$(echo "${{ matrix.version }}" | sed 's/\./_/g')
          echo "CLI_VERSION=$version" >> $GITHUB_ENV

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔀 Download Go dependencies
        run: task deps:download

      - name: 🔨 Setup Test tools
        run: task test:tools

      - name: 🧪 Run tests
        if: matrix.cli == 'terraform'
        run: task test
        timeout-minutes: 45
        env:
          # TF_LOG: DEBUG
          FABRIC_USE_OIDC: true
          FABRIC_TENANT_ID: ${{ secrets.TESTACC_TENANT_ID }}
          FABRIC_CLIENT_ID: ${{ secrets.TESTACC_SPN_TF_CLIENT_ID }}
          ARM_USE_OIDC: true
          ARM_TENANT_ID: ${{ secrets.TESTACC_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.TESTACC_SPN_TF_CLIENT_ID }}
          FABRIC_CONNECTION_SQL_SERVER_USERNAME: ${{ secrets.TESTACC_SQL_SERVER_USERNAME }}
          FABRIC_CONNECTION_SQL_SERVER_PASSWORD: ${{ secrets.TESTACC_SQL_SERVER_PASSWORD }}
          FABRIC_CONNECTION_SQL_SERVER_URL: ${{ secrets.TESTACC_SQL_SERVER_URL }}
          # ARM_SUBSCRIPTION_ID: ${{ secrets.TESTACC_SUBSCRIPTION_ID }}

      - name: 🧪 Run tests
        if: matrix.cli == 'tofu'
        run: task test
        timeout-minutes: 45
        env:
          FABRIC_USE_OIDC: true
          FABRIC_TENANT_ID: ${{ secrets.TESTACC_TENANT_ID }}
          FABRIC_CLIENT_ID: ${{ secrets.TESTACC_SPN_OT_CLIENT_ID }}
          ARM_USE_OIDC: true
          ARM_TENANT_ID: ${{ secrets.TESTACC_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.TESTACC_SPN_OT_CLIENT_ID }}
          FABRIC_CONNECTION_SQL_SERVER_USERNAME: ${{ secrets.TESTACC_SQL_SERVER_USERNAME }}
          FABRIC_CONNECTION_SQL_SERVER_PASSWORD: ${{ secrets.TESTACC_SQL_SERVER_PASSWORD }}
          FABRIC_CONNECTION_SQL_SERVER_URL: ${{ secrets.TESTACC_SQL_SERVER_URL }}
          # ARM_SUBSCRIPTION_ID: ${{ secrets.TESTACC_SUBSCRIPTION_ID }}

      - name: 📤 Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ format('{0}-{1}-test-results', matrix.cli, env.CLI_VERSION) }}
          path: testresults.json
          if-no-files-found: warn
          overwrite: true

      - name: 📤 Upload coverage results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ format('{0}-{1}-test-coverage-results', matrix.cli, env.CLI_VERSION) }}
          path: |
            coverage.html
            coverage.out
            coverage.xml
          if-no-files-found: warn
          overwrite: true

      - name: 📢 Publish test results
        if: always()
        uses: dorny/test-reporter@dc3a92680fcc15842eef52e8c4606ea7ce6bd3f3 # v2.1.1
        with:
          name: 📜 Test results (${{ matrix.cli }} ${{ matrix.version }})
          reporter: golang-json
          path: testresults.json

      - name: ⚙️ Get Coverage summary
        if: always()
        uses: irongut/CodeCoverageSummary@51cc3a756ddcd398d447c044c02cb6aa83fdae95 # v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "40 60"

      - name: 📤 Upload Coverage summary
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ format('{0}-{1}-test-coverage-summary', matrix.cli, env.CLI_VERSION) }}
          path: |
            code-coverage-results.md
          if-no-files-found: warn
          overwrite: true

  test-summary:
    name: 📔 Test Summary
    needs:
      - test
      - changes
    if: always() && needs.changes.outputs.src == 'true'
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      issues: write
      # actions: read
      pull-requests: write
      id-token: write
    steps:
      - name: 📥 Download test results
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: terraform-1_13-test-results
          merge-multiple: true

      - name: 📥 Download coverage results
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: terraform-1_13-test-coverage*
          merge-multiple: true

      - name: 📝 Publish
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      # - name: 📤 Upload test results to Codecov
      #   uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
      #   with:
      #     # use_oidc: true
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: ./testresults.xml

      - name: 📤 Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          # use_oidc: true
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          disable_search: true

      # - name: 📝 Code Coverage report
      #   uses: fgrosse/go-coverage-report@8c1d1a09864211d258937b1b1a5b849f7e4f2682 # v1.2.0
      #   with:
      #     coverage-artifact-name: terraform-1_13-test-coverage-results
      #     coverage-file-name: coverage.out

      - name: 🔎 Find comment
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        uses: peter-evans/find-comment@b30e6a3c0ed37e7c023ccd3f1db5c6c0b0c23aad # v4.0.0
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: Minimum allowed line rate is

      - name: 📝 Create comment
        if: steps.fc.outputs.comment-id == '' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target')
        uses: peter-evans/create-or-update-comment@e8674b075228eee787fea43ef493e45ece1004c9 # v5.0.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-path: code-coverage-results.md

      - name: 📝 Update comment
        if: steps.fc.outputs.comment-id != '' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target')
        uses: peter-evans/create-or-update-comment@e8674b075228eee787fea43ef493e45ece1004c9 # v5.0.0
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body-path: code-coverage-results.md
          edit-mode: replace

  # Returns success if all matrix jobs in test are successful - otherwise, it returns a failure.
  # Use this as a PR status check for GitHub Policy Service instead of individual matrix entry checks.
  check-test-matrix:
    if: always()
    name: 🧪 Check Tests
    needs: test
    runs-on: ubuntu-24.04
    steps:
      - name: ✅ OK
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: 🛑 Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
