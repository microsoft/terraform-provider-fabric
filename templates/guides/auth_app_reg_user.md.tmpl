---
page_title: "Creating an App Registration for the User context"
subcategory: "Authentication"
description: |-

---

# Creating an App Registration for the User context

---

## Create an App Registration

You can follow this [guide](https://learn.microsoft.com/entra/identity-platform/quickstart-register-app#register-an-application) to create an app registration.

## Set API Permissions

In the **API permissions** menu of your App Registration, add required API permissions to use with the Microsoft Fabric Terraform Provider:

-> Depends on your solution you may add various set of API permissions. The below one are just an example.

- Power BI Service
  - App.Read.All
  - Capacity.ReadWrite.All
  - ...
  - ...
  - Workspace.Read.All
  - Workspace.ReadWrite.All

- Microsoft Graph
  - User.Read
  - User.ReadBasic.All

## Expose API

In the **Expose an API** menu of your App Registration, you need to define your application ID URI:

- Application ID URI: `api://<client_id>`, for example:

```text
api://fabric_terraform_provider
```

- Add required scope in the `Scopes defined by this API` section:

1. Scope name: `access`
1. Who can consent: `Admins and users`
1. Admin consent display name: `Microsoft Fabric Terraform Provider`
1. Admin consent description: `Allows connection to backend services for Microsoft Fabric Terraform Provider`
1. User consent display name: `Microsoft Fabric Terraform Provider`
1. User consent description: `Allows connection to backend services for Microsoft Fabric Terraform Provider`
1. State: `Enabled`

- You will finally need to pre-authorize Azure CLI/Azure PowerShell and Power BI to access your exposed API permissions by adding Azure CLI/Azure PowerShell and Power BI 1st party Microsoft applications. In the `Authorized client applications` section add:
   - for Azure CLI: `04b07795-8ddb-461a-bbee-02f9e1bf7b46`
   - for Azure PowerShell: `1950a258-227b-4e31-a9cf-717495945fc2`
   - for Power BI: `00000009-0000-0000-c000-000000000000` and `871c010f-5e61-4fb1-83ac-98610a7e9110`

Read more about first-party Microsoft applications ine the [Application IDs of commonly used Microsoft applications](https://learn.microsoft.com/troubleshoot/azure/entra/entra-id/governance/verify-first-party-apps-sign-in#application-ids-of-commonly-used-microsoft-applications) article.

## Usage with Azure CLI

After above steps you should be able to authenticate using [Azure CLI](https://learn.microsoft.com/cli/azure/):

{{ codefile "shell" "examples/guides/auth_app_reg_user/azcli_login.sh" }}

The following Fabric Provider block can be specified to use the Azure CLI:

```terraform
provider "fabric" {
  use_cli = true
}
```

## Usage with Azure PowerShell

After above steps you should be able to authenticate using [Azure PowerShell](https://learn.microsoft.com/powershell/azure/):

{{ codefile "powershell" "examples/guides/auth_app_reg_user/azps_login.ps1" }}

The following Fabric Provider block can be specified to use the Azure PowerShell:

```terraform
provider "fabric" {}
```
